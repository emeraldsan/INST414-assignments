import requests
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# API endpoint URLs
bike_data_url = 'https://bike-sharing-api.com/data'
weather_data_url = 'https://weather-api.com/data'

# Function to fetch data from the API
def fetch_data(api_url):
    response = requests.get(api_url)
    if response.status_code == 200:
        return response.json()
    else:
        print(f"Failed to fetch data. Status code: {response.status_code}")
        return None

bike_data = fetch_data(bike_data_url)
weather_data = fetch_data(weather_data_url)

if bike_data and weather_data:
    # Convert data to pandas DataFrame
    bike_df = pd.DataFrame(bike_data)
    weather_df = pd.DataFrame(weather_data)

    
    merged_df = pd.merge(bike_df, weather_df, on=['station_id', 'date'])

    # For example, plot bike rentals over time
    plt.figure(figsize=(12, 6))
    sns.lineplot(x='date', y='bike_rentals', data=merged_df)
    plt.title('Bike Rentals Over Time')
    plt.xlabel('Date')
    plt.ylabel('Number of Bike Rentals')
    plt.show()

    # Correlation between temperature and bike rentals
    correlation_matrix = merged_df[['temperature', 'bike_rentals']].corr()
    print(f"Correlation between temperature and bike rentals:\n{correlation_matrix}")


    # Save the cleaned and merged dataset to a CSV file
    merged_df.to_csv('bike_weather_data.csv', index=False)
else:
    print("Data fetching failed. Please check the API endpoints.")
